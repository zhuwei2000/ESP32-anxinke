#include <Arduino.h>
#include <wire.h>
#include <WiFi.h>
#include "SSD1306.h"
//OLED地址以及IIC引脚定义
const int Address = 0x3C;
const int SDA_pin = 21;
const int SCL_pin = 22;
//WIFI名称及密码
const char* WIFI_SSID = "IIIIIIIIIIIIIII";  
const char* WIFI_PWD = "huxuzhuchen";
const char* ntpSever = "pool.ntp.org";
//时区信息
const long gmtoffset_sec = 8*3600;
const int daylightoffset_sec = 0;
//定义OLED类  
SSD1306 display(Address,SDA_pin,SCL_pin);
//保存自身的IP信息
IPAddress ipv4;
//保存IPV4 地址
uint8_t ip[4];
struct tm timeinfo;
const unsigned char wifi_image[]={0x00,0x00,0x00,0x00,0xC0,0x03,0xF0,0x0F,0xF8,0x1F,0x1C,0x3C,0x0E,0x70,0xE6,0x63,
                                  0xF0,0x07,0x38,0x0E,0x18,0x0C,0x00,0x00,0xC0,0x03,0xC0,0x03,0x80,0x01,0x00,0x00};
const unsigned char xing[]={
0x00,0x00,0xF8,0x0F,0x08,0x08,0xF8,0x0F,0x08,0x08,0xF8,0x0F,0x80,0x00,0x88,0x00,
0xF8,0x1F,0x84,0x00,0x82,0x00,0xF8,0x0F,0x80,0x00,0x80,0x00,0xFE,0x3F,0x00,0x00/*"星",0*/
};
const unsigned char qi[]= {
0x44,0x00,0x44,0x3E,0xFE,0x22,0x44,0x22,0x44,0x22,0x7C,0x3E,0x44,0x22,0x44,0x22,
0x7C,0x22,0x44,0x3E,0x44,0x22,0xFF,0x22,0x20,0x21,0x44,0x21,0x82,0x28,0x41,0x10/*"期",0*/
};
const unsigned char one[]= {
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x7F,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00/*"一",0*/
};
const unsigned char two[]= {
0x00,0x00,0x00,0x00,0x00,0x00,0xFC,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x7F,0x00,0x00,0x00,0x00,0x00,0x00/*"二",0*/
};
const unsigned char thr[]={
0x00,0x00,0x00,0x00,0xFE,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFC,0x1F,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x7F,0x00,0x00,0x00,0x00/*"三",0*/
};
const unsigned char th[]={
0x00,0x00,0x00,0x00,0xFE,0x3F,0x22,0x22,0x22,0x22,0x22,0x22,0x22,0x22,0x22,0x22,
0x12,0x22,0x12,0x3C,0x0A,0x20,0x06,0x20,0x02,0x20,0xFE,0x3F,0x02,0x20,0x00,0x00/*"四",0*/
};
const unsigned char fri[]={
0x00,0x00,0xFE,0x3F,0x40,0x00,0x40,0x00,0x40,0x00,0x40,0x00,0xFC,0x0F,0x20,0x08,
0x20,0x08,0x20,0x08,0x20,0x08,0x10,0x08,0x10,0x08,0x10,0x08,0xFF,0x7F,0x00,0x00/*"五",0*/
};
const unsigned char sat[]={
0x40,0x00,0x80,0x00,0x00,0x01,0x00,0x01,0x00,0x00,0xFF,0x7F,0x00,0x00,0x00,0x00,
0x20,0x02,0x20,0x04,0x10,0x08,0x10,0x10,0x08,0x10,0x04,0x20,0x02,0x20,0x00,0x00/*"六",0*/
};
const unsigned char sun[]={
0x00,0x00,0xF8,0x0F,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0xF8,0x0F,
0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0xF8,0x0F,0x08,0x08/*"日",0*/
};


//WIFI连接
void wificonnect() { 
  char buff[16]; 
  WiFi.begin(WIFI_SSID, WIFI_PWD);
  while (WiFi.status() != WL_CONNECTED) {
    delay(80);
    display.clear();
    display.setFont(ArialMT_Plain_16);
    display.setTextAlignment(TEXT_ALIGN_LEFT);
    display.drawString(10, 18, "wait");
    display.display(); 
  }
  display.clear();
  display.setFont(ArialMT_Plain_10);
  display.setTextAlignment(TEXT_ALIGN_LEFT);
  display.drawString(0, 0, "Connected");
  display.drawString(0, 12, "Wifi:IIIIIIIIIIIIIII");
 
  ipv4=WiFi.localIP();

  for(int i=0;i<4;i++)
  {
    ip[i]=ipv4[i];
  }
  sprintf_P(buff, PSTR("%d.%d.%d.%d"), ip[0],ip[1],ip[2],ip[3]);
  display.drawString(0,25,"IP:");
  display.drawString(20,25,String(buff));
  display.display();
  delay(500);
}

void setday()
{
  display.drawIco16x16(0,0,xing);
  display.drawIco16x16(16,0,qi);
  switch(timeinfo.tm_wday){
    case 1:display.drawIco16x16(32,0,one);break;
    case 2:display.drawIco16x16(32,0,two);break;
    case 3:display.drawIco16x16(32,0,thr);break;
    case 4:display.drawIco16x16(32,0,th); break;
    case 5:display.drawIco16x16(32,0,fri);break;
    case 6:display.drawIco16x16(32,0,sat);break;
    case 7:display.drawIco16x16(32,0,sun);break;
  }
}

void Dislocaltime()
{
  char buff[16]; 
  char buff_2[16];

  if(!getLocalTime(&timeinfo))
  {
    delay(500);
    display.setFont(ArialMT_Plain_10);
    display.drawString(0, 0, "Get time Error!");
  }
  sprintf_P(buff, PSTR("%d:%d:%d"),timeinfo.tm_hour,timeinfo.tm_min,timeinfo.tm_sec );
  sprintf_P(buff_2,PSTR("%d-%d-%d"),timeinfo.tm_year+1900,timeinfo.tm_mon+1,timeinfo.tm_mday);
  display.setFont(ArialMT_Plain_24);
  display.drawString(15,20,String(buff));
  display.setFont(ArialMT_Plain_10);
  display.drawString(40,46,String(buff_2));
  display.drawIco16x16(110,0,wifi_image);
  setday();
}

void setup() {
  // 屏幕初始化
  display.init();
  display.clear();
  display.display();
  display.setContrast(255); //屏幕亮度
  // 用固定密码连接
  wificonnect();
  configTime(gmtoffset_sec, daylightoffset_sec, ntpSever);
  Dislocaltime();
  WiFi.disconnect(true);
  WiFi.mode(WIFI_OFF);
  delay(200);
}

 
 
void loop() {
  display.clear();
  Dislocaltime();
  display.display(); 
}